{"version":3,"file":"js/242.4c20b33c.js","mappings":"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","sources":["webpack://multiple-choice/./src/views/ProfileView.vue","webpack://multiple-choice/./src/components/profile/ProfileQuestions.vue","webpack://multiple-choice/./src/components/profile/EditableQuestion.vue","webpack://multiple-choice/./src/components/profile/EditableQuestion.vue?872b","webpack://multiple-choice/./src/components/profile/EditQuestionWindow.vue","webpack://multiple-choice/./src/components/profile/EditQuestionWindow.vue?6d12","webpack://multiple-choice/./src/components/profile/ProfileQuestions.vue?5f03","webpack://multiple-choice/./src/views/ProfileView.vue?3e49"],"sourcesContent":["<template>\n  <profile-questions></profile-questions>\n</template>\n\n<script>\nimport ProfileQuestions from \"@/components/profile/ProfileQuestions.vue\";\n\nexport default {\n  components: { ProfileQuestions },\n};\n</script>\n\n<style scoped></style>\n","<template>\n  <div class=\"profile-questions\">\n    <div class=\"filter-bar\">\n      <label for=\"filter\">Filter by Label:</label>\n      <select class=\"dropdown\" id=\"filter\" v-model=\"selectedLabel\">\n        <option value=\"\" class=\"dropdown-item\">All Labels</option>\n        <option\n          class=\"dropdown-item\"\n          v-for=\"labelObject in teamLabels\"\n          :key=\"labelObject.id\"\n          :value=\"labelObject.label\"\n        >\n          {{ labelObject.label }}\n        </option>\n      </select>\n    </div>\n    <div class=\"container questions-list\">\n      <div v-for=\"(question, index) in filteredQuestions\" :key=\"index\">\n        <editable-question\n          :question=\"question\"\n          @edit=\"edit\"\n          @delete=\"deleteQuestion(question.id)\"\n        ></editable-question>\n      </div>\n    </div>\n  </div>\n  <edit-question-window\n    :question=\"questionInEdit\"\n    v-if=\"editQuestion\"\n    @close=\"editQuestion = false\"\n  ></edit-question-window>\n</template>\n\n<script>\nimport EditableQuestion from \"@/components/profile/EditableQuestion.vue\";\nimport EditQuestionWindow from \"@/components/profile/EditQuestionWindow.vue\";\nimport { computed, ref } from \"vue\";\nimport { mapActions, useStore } from \"vuex\";\n\nexport default {\n  name: \"ProfileQuestions\",\n  components: {\n    EditQuestionWindow,\n    EditableQuestion,\n  },\n  setup() {\n    const store = useStore();\n\n    const selectedLabel = ref(\"\");\n    const editQuestion = ref(false);\n    const questionInEdit = ref(null);\n\n    const teamQuestions = computed(() => store.getters.getTeamQuestions);\n    const teamLabels = computed(() => store.getters.getTeamLabels);\n    const filteredQuestions = computed(() => {\n      if (!selectedLabel.value) {\n        return teamQuestions.value;\n      }\n      return teamQuestions.value.filter((question) =>\n        question.questionLabels.some(\n          (labelObject) => labelObject.label === selectedLabel.value\n        )\n      );\n    });\n    return {\n      teamQuestions,\n      teamLabels,\n      filteredQuestions,\n      editQuestion,\n      questionInEdit,\n      selectedLabel,\n    };\n  },\n  methods: {\n    ...mapActions([\"deleteQuestion\"]),\n\n    edit(question) {\n      this.questionInEdit = question;\n      this.editQuestion = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.profile-questions {\n  margin-top: 20px;\n}\n\n.filter-bar {\n  margin-bottom: 10px;\n}\n\n.questions-list {\n  display: grid;\n  grid-template-columns: 1fr; /* Eine Frage pro Zeile */\n  gap: 20px;\n}\n</style>\n","<template>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div>\n        <div class=\"text-start\" @click=\"extended = !extended\">\n          {{ question.questionText }}\n          <div v-if=\"extended\">\n            <div v-for=\"(option, index) in question.answerOptions\" :key=\"index\">\n              {{ option.text }}\n            </div>\n          </div>\n        </div>\n        <div class=\"row align-items-center\">\n          <div class=\"col\">\n            <div class=\"d-flex flex-wrap\">\n              <div\n                v-for=\"labelObject in question.questionLabels\"\n                :key=\"labelObject.id\"\n              >\n                <question-label\n                  :label-object=\"labelObject\"\n                  :active=\"true\"\n                ></question-label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <button\n        class=\"my-global-button\"\n        style=\"margin: 5px\"\n        @click=\"editQuestion\"\n      >\n        <i class=\"bi bi-pencil-square\"></i>\n        <span class=\"d-none d-md-inline\">Edit</span>\n      </button>\n      <button\n        class=\"my-global-button\"\n        style=\"margin: 5px\"\n        @click=\"toggleDelete\"\n      >\n        <i\n          :class=\"{ 'delete-icon': isDeleting, default: !isDeleting }\"\n          @animationend=\"resetDeleteButton\"\n          class=\"bi bi-trash\"\n        ></i>\n        <span class=\"d-none d-md-inline\">{{ deleteButtonText }}</span>\n      </button>\n    </div>\n    <hr />\n  </div>\n</template>\n\n<script>\nimport QuestionLabel from \"@/components/label/QuestionLabel.vue\";\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  components: { QuestionLabel },\n  emits: [\"edit\", \"delete\"],\n  props: {\n    question: Object,\n  },\n  setup() {\n    const store = useStore();\n    const teamLabels = computed(() => store.getters.getTeamLabels);\n    return {\n      teamLabels,\n    };\n  },\n  data() {\n    return {\n      extended: false,\n      isDeleting: false,\n    };\n  },\n  computed: {\n    deleteButtonText() {\n      return this.isDeleting ? \"Confirm \" : \"Delete\";\n    },\n  },\n  methods: {\n    editQuestion() {\n      this.$emit(\"edit\", this.question);\n    },\n    toggleDelete() {\n      if (this.isDeleting) {\n        this.delete(); // Hier die eigentliche Löschfunktion aufrufen\n      } else {\n        this.isDeleting = true;\n        setTimeout(() => {\n          this.isDeleting = false;\n        }, 3000);\n      }\n    },\n    delete() {\n      this.$emit(\"delete\", this.question);\n      this.isDeleting = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.default-icon {\n  color: white;\n}\n.delete-icon {\n  animation: colorChange 3s linear;\n  animation-fill-mode: forwards;\n}\n\n@keyframes colorChange {\n  0% {\n    transform: translateY(0);\n    color: red;\n  }\n  100% {\n    transform: translateY(100%);\n    color: white;\n  }\n}\n</style>\n","import { render } from \"./EditableQuestion.vue?vue&type=template&id=e48e5552&scoped=true\"\nimport script from \"./EditableQuestion.vue?vue&type=script&lang=js\"\nexport * from \"./EditableQuestion.vue?vue&type=script&lang=js\"\n\nimport \"./EditableQuestion.vue?vue&type=style&index=0&id=e48e5552&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e48e5552\"]])\n\nexport default __exports__","<template>\n  <div class=\"pop-up-window\">\n    <div class=\"pop-up-inner\">\n      <component\n        :is=\"currentQuestionType\"\n        :inputQuestion=\"currentQuestion\"\n        @cancel=\"cancelEditing\"\n        @returnQuestion=\"saveChanges\"\n      ></component>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref } from \"vue\";\nimport QuestionLabel from \"@/components/label/QuestionLabel.vue\";\nimport NewLabel from \"@/components/label/NewLabel.vue\";\nimport { mapActions, useStore } from \"vuex\";\nimport MultipleChoiceQuestionBuilder from \"@/components/upload/MultipleChoiceQuestionBuilder.vue\";\nimport FlashCardBuilder from \"@/components/upload/FlashCardBuilder.vue\";\n\nexport default {\n  components: {\n    FlashCardBuilder,\n    MultipleChoiceQuestionBuilder,\n    QuestionLabel,\n    NewLabel,\n  },\n  emits: [\"close\"],\n  props: {\n    question: Object,\n  },\n  setup(props) {\n    const store = useStore();\n    const teamLabels = computed(() => store.getters.getTeamLabels);\n    const addedLabels = ref([]);\n    const displayedLabels = computed(() =>\n      teamLabels.value.concat(addedLabels.value)\n    );\n    const currentQuestion = ref({ ...props.question });\n    const currentQuestionType = computed(() => {\n      if (props.question.type === \"multiple-choice\") {\n        return \"multiple-choice-question-builder\";\n      } else if (props.question.type === \"flash-card\") {\n        console.log(\"flashcard\");\n        return \"flash-card-builder\";\n      }\n      return null;\n    });\n    return {\n      teamLabels,\n      addedLabels,\n      displayedLabels,\n      currentQuestion,\n      currentQuestionType,\n    };\n  },\n  data() {\n    return {\n      questionText: \"\",\n      answers: [{ text: \"\" }, { text: \"\" }, { text: \"\" }, { text: \"\" }],\n      questionLabels: [],\n      questionId: \"\",\n      correctAnswerIndex: null,\n      updatedQuestion: null,\n    };\n  },\n  methods: {\n    ...mapActions([\"updateTeamQuestion\", \"addNewLabelToTeamLabels\"]),\n\n    async saveChanges(questionObject, addedLabels) {\n      await this.updateTeamLabels(addedLabels);\n      //const questionObject = this.createPrivateQuestion();\n      console.log(questionObject);\n      await this.updateTeamQuestion(questionObject);\n      this.$emit(\"close\");\n    },\n\n    cancelEditing() {\n      this.$emit(\"close\");\n    },\n\n    async updateTeamLabels(addedLabels) {\n      for (const newLabel of addedLabels) {\n        newLabel.id = await this.addNewLabelToTeamLabels(newLabel.label);\n        console.log(newLabel);\n      }\n      console.log(\"added Labels: \", addedLabels);\n    },\n\n    addLabel(labelObject) {\n      this.addedLabels.push(labelObject);\n    },\n\n    toggleLabel(otherLabelObject) {\n      const labelExists = this.questionLabels.some(\n        (label) => label.id === otherLabelObject.id\n      );\n      if (labelExists) {\n        this.questionLabels = this.questionLabels.filter(\n          (labelObject) => labelObject.id !== otherLabelObject.id\n        );\n      } else {\n        this.questionLabels.push(otherLabelObject);\n      }\n    },\n\n    isActive(otherLabelObject) {\n      return this.questionLabels.some(\n        (labelObject) => labelObject.label === otherLabelObject.label\n      );\n    },\n\n    createPrivateQuestion() {\n      return {\n        id: this.questionId,\n        questionText: this.questionText,\n        questionLabels: this.questionLabels.map((labelObject) => {\n          return {\n            label: labelObject.label,\n            id: labelObject.id,\n          };\n        }),\n        answerOptions: this.answers.map((answer, index) => {\n          return {\n            text: answer.text,\n            isCorrect: index === this.correctAnswerIndex,\n          };\n        }),\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.pop-up-window {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 99;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.pop-up-inner {\n  background-color: white;\n  border-radius: 1rem;\n  padding: 32px;\n}\n\n.answer-label {\n  font-size: 18px;\n}\n\n.question-input-wrapper {\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n}\n\ninput[type=\"text\"] {\n  flex: 1;\n  font-size: 16px;\n  padding: 8px;\n  margin-left: 10px;\n  margin-right: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.option-input-wrapper {\n  display: flex;\n  grid-template-columns: auto 1fr; /* data und Eingabe in einer Zeile mit Grid-Layout */\n  align-items: center;\n  margin-left: 10px;\n  margin-right: 10px;\n}\n\n.label-list {\n  display: flex;\n  flex-wrap: wrap; /* Labels in mehreren Zeilen anzeigen */\n  align-items: center; /* Vertikal ausrichten */\n  margin-top: 10px; /* Abstand oben */\n}\n\n.label-wrapper {\n  margin-right: 10px; /* Abstand zwischen den Labels */\n}\n</style>\n","import { render } from \"./EditQuestionWindow.vue?vue&type=template&id=75fc62b0&scoped=true\"\nimport script from \"./EditQuestionWindow.vue?vue&type=script&lang=js\"\nexport * from \"./EditQuestionWindow.vue?vue&type=script&lang=js\"\n\nimport \"./EditQuestionWindow.vue?vue&type=style&index=0&id=75fc62b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-75fc62b0\"]])\n\nexport default __exports__","import { render } from \"./ProfileQuestions.vue?vue&type=template&id=4ba4e46f&scoped=true\"\nimport script from \"./ProfileQuestions.vue?vue&type=script&lang=js\"\nexport * from \"./ProfileQuestions.vue?vue&type=script&lang=js\"\n\nimport \"./ProfileQuestions.vue?vue&type=style&index=0&id=4ba4e46f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4ba4e46f\"]])\n\nexport default __exports__","import { render } from \"./ProfileView.vue?vue&type=template&id=da229bfc\"\nimport script from \"./ProfileView.vue?vue&type=script&lang=js\"\nexport * from \"./ProfileView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_profile_questions","class","_createElementVNode","for","value","_hoisted_1","_hoisted_2","_hoisted_3","id","$setup","selectedLabel","$event","_hoisted_4","_createElementBlock","_Fragment","_renderList","teamLabels","labelObject","key","label","_hoisted_5","_hoisted_6","filteredQuestions","question","index","_createVNode","_component_editable_question","onEdit","$options","edit","onDelete","_ctx","deleteQuestion","editQuestion","_component_edit_question_window","questionInEdit","onClose","_cache","_hoisted_8","_hoisted_9","onClick","$data","extended","$props","questionText","answerOptions","option","_toDisplayString","text","questionLabels","_component_question_label","active","_hoisted_7","style","args","toggleDelete","_normalizeClass","isDeleting","default","onAnimationend","resetDeleteButton","_hoisted_11","deleteButtonText","_hoisted_12","components","QuestionLabel","emits","props","Object","setup","store","useStore","computed","getters","getTeamLabels","data","this","methods","$emit","delete","setTimeout","__exports__","_resolveDynamicComponent","currentQuestionType","inputQuestion","currentQuestion","onCancel","cancelEditing","onReturnQuestion","saveChanges","FlashCardBuilder","MultipleChoiceQuestionBuilder","NewLabel","addedLabels","ref","displayedLabels","concat","type","console","log","answers","questionId","correctAnswerIndex","updatedQuestion","mapActions","questionObject","updateTeamLabels","updateTeamQuestion","newLabel","addNewLabelToTeamLabels","addLabel","push","toggleLabel","otherLabelObject","labelExists","some","filter","isActive","createPrivateQuestion","map","answer","isCorrect","name","EditQuestionWindow","EditableQuestion","teamQuestions","getTeamQuestions","ProfileQuestions","render"],"sourceRoot":""}